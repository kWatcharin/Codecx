# Generated by Django 4.1.1 on 2022-11-02 15:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist_title', models.CharField(blank=True, help_text="The artist's name.", max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BookCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_category_tag_label', models.CharField(blank=True, help_text="The book(lightnovel)'s tage label.", max_length=200, null=True)),
                ('book_category_tag_1st', models.CharField(blank=True, choices=[('N/A', 'n/a'), ('Action', 'Action'), ('Drama', 'Drama'), ('Adventure', 'Adventure'), ('Comedy', 'Comedy'), ('Magical', 'Magical'), ('Ecchi', 'Ecchi'), ('Fantasy', 'Fantasy'), ('Gender Bender', 'Gender Bender'), ('Harem', 'Harem'), ('Historical', 'Historical'), ('Horror', 'Horror'), ('Josei', 'Josei'), ('Mature', 'Mature'), ('Mechanical', 'Mechanical'), ('Mystery', 'Mystery'), ('Psychological', 'Psychological'), ('Romance', 'Romance'), ('School Life', 'School Life'), ('Sci-fi', 'Sci-Fi'), ('Seinen', 'Seinen'), ('Shojou', 'Shojou'), ('Shonen', 'Shonen'), ('Shoujou Ai', 'Shojou Ai'), ('Slice of Life', 'Slice of Life'), ('Sport', 'Sport'), ('Tragedy', 'Tragedy'), ('Yaoi', 'Yaoi'), ('Yuri', 'Yuri'), ('Isekai', 'Isekai')], default='N/A', max_length=25, null=True)),
                ('book_category_tag_2nd', models.CharField(blank=True, choices=[('N/A', 'n/a'), ('Action', 'Action'), ('Drama', 'Drama'), ('Adventure', 'Adventure'), ('Comedy', 'Comedy'), ('Magical', 'Magical'), ('Ecchi', 'Ecchi'), ('Fantasy', 'Fantasy'), ('Gender Bender', 'Gender Bender'), ('Harem', 'Harem'), ('Historical', 'Historical'), ('Horror', 'Horror'), ('Josei', 'Josei'), ('Mature', 'Mature'), ('Mechanical', 'Mechanical'), ('Mystery', 'Mystery'), ('Psychological', 'Psychological'), ('Romance', 'Romance'), ('School Life', 'School Life'), ('Sci-fi', 'Sci-Fi'), ('Seinen', 'Seinen'), ('Shojou', 'Shojou'), ('Shonen', 'Shonen'), ('Shoujou Ai', 'Shojou Ai'), ('Slice of Life', 'Slice of Life'), ('Sport', 'Sport'), ('Tragedy', 'Tragedy'), ('Yaoi', 'Yaoi'), ('Yuri', 'Yuri'), ('Isekai', 'Isekai')], default='N/A', max_length=25, null=True)),
                ('book_category_tag_3rd', models.CharField(blank=True, choices=[('N/A', 'n/a'), ('Action', 'Action'), ('Drama', 'Drama'), ('Adventure', 'Adventure'), ('Comedy', 'Comedy'), ('Magical', 'Magical'), ('Ecchi', 'Ecchi'), ('Fantasy', 'Fantasy'), ('Gender Bender', 'Gender Bender'), ('Harem', 'Harem'), ('Historical', 'Historical'), ('Horror', 'Horror'), ('Josei', 'Josei'), ('Mature', 'Mature'), ('Mechanical', 'Mechanical'), ('Mystery', 'Mystery'), ('Psychological', 'Psychological'), ('Romance', 'Romance'), ('School Life', 'School Life'), ('Sci-fi', 'Sci-Fi'), ('Seinen', 'Seinen'), ('Shojou', 'Shojou'), ('Shonen', 'Shonen'), ('Shoujou Ai', 'Shojou Ai'), ('Slice of Life', 'Slice of Life'), ('Sport', 'Sport'), ('Tragedy', 'Tragedy'), ('Yaoi', 'Yaoi'), ('Yuri', 'Yuri'), ('Isekai', 'Isekai')], default='N/A', max_length=25, null=True)),
                ('book_category_tag_4th', models.CharField(blank=True, choices=[('N/A', 'n/a'), ('Action', 'Action'), ('Drama', 'Drama'), ('Adventure', 'Adventure'), ('Comedy', 'Comedy'), ('Magical', 'Magical'), ('Ecchi', 'Ecchi'), ('Fantasy', 'Fantasy'), ('Gender Bender', 'Gender Bender'), ('Harem', 'Harem'), ('Historical', 'Historical'), ('Horror', 'Horror'), ('Josei', 'Josei'), ('Mature', 'Mature'), ('Mechanical', 'Mechanical'), ('Mystery', 'Mystery'), ('Psychological', 'Psychological'), ('Romance', 'Romance'), ('School Life', 'School Life'), ('Sci-fi', 'Sci-Fi'), ('Seinen', 'Seinen'), ('Shojou', 'Shojou'), ('Shonen', 'Shonen'), ('Shoujou Ai', 'Shojou Ai'), ('Slice of Life', 'Slice of Life'), ('Sport', 'Sport'), ('Tragedy', 'Tragedy'), ('Yaoi', 'Yaoi'), ('Yuri', 'Yuri'), ('Isekai', 'Isekai')], default='N/A', max_length=25, null=True)),
                ('book_category_tag_5th', models.CharField(blank=True, choices=[('N/A', 'n/a'), ('Action', 'Action'), ('Drama', 'Drama'), ('Adventure', 'Adventure'), ('Comedy', 'Comedy'), ('Magical', 'Magical'), ('Ecchi', 'Ecchi'), ('Fantasy', 'Fantasy'), ('Gender Bender', 'Gender Bender'), ('Harem', 'Harem'), ('Historical', 'Historical'), ('Horror', 'Horror'), ('Josei', 'Josei'), ('Mature', 'Mature'), ('Mechanical', 'Mechanical'), ('Mystery', 'Mystery'), ('Psychological', 'Psychological'), ('Romance', 'Romance'), ('School Life', 'School Life'), ('Sci-fi', 'Sci-Fi'), ('Seinen', 'Seinen'), ('Shojou', 'Shojou'), ('Shonen', 'Shonen'), ('Shoujou Ai', 'Shojou Ai'), ('Slice of Life', 'Slice of Life'), ('Sport', 'Sport'), ('Tragedy', 'Tragedy'), ('Yaoi', 'Yaoi'), ('Yuri', 'Yuri'), ('Isekai', 'Isekai')], default='N/A', max_length=25, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BookLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_language_select', models.CharField(choices=[('ENGLISH', 'English'), ('JAPANESE', 'Japanese')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Contributor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contributor_title', models.CharField(blank=True, help_text="The contributor's name.", max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publisher_title', models.CharField(blank=True, help_text="The publisher's name.", max_length=30, null=True)),
                ('website', models.URLField(blank=True, help_text="The publisher's website.", null=True)),
                ('email', models.EmailField(blank=True, help_text="The publisher's email.", max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StockStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_status', models.CharField(blank=True, choices=[('IN STOCK', 'In stock'), ('OUT OF STOCK', 'Out of stock')], default='IN STOCK', max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_title_eng', models.CharField(blank=True, db_index=True, help_text="The book's name in English.", max_length=200, null=True)),
                ('book_title_jp', models.CharField(blank=True, db_index=True, help_text="The book's name in Japanese(Romaji).", max_length=200, null=True)),
                ('isbn', models.CharField(blank=True, db_index=True, max_length=20, null=True, unique=True, verbose_name='ISBN numbers of the book.')),
                ('year', models.CharField(blank=True, help_text='The first year of (book)lightnovel that was published.', max_length=4, null=True)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True)),
                ('pages', models.CharField(blank=True, help_text="Theq book(lightnovel)'s page.", max_length=4, null=True)),
                ('image', models.ImageField(blank=True, help_text="For the book(lightnovel)'s image.", null=True, upload_to='', verbose_name='/store_app/image')),
                ('volume_no', models.CharField(blank=True, help_text="The volume's number of the (book)lightnovel.", max_length=3, null=True)),
                ('stock_volume', models.IntegerField(blank=True, help_text='The stock of the (book)lightnovel in the warehouse.', null=True)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('premium_price', models.DecimalField(blank=True, decimal_places=2, help_text='The premium price of the (book)lightnovel.', max_digits=6, null=True)),
                ('normal_price', models.DecimalField(blank=True, decimal_places=2, help_text='The normal price of the (book)lightnovel.', max_digits=6, null=True)),
                ('book_description', models.TextField(blank=True, help_text='The description that describe the book.', null=True)),
                ('artist', models.ForeignKey(blank=True, help_text='The artist of the book(lightnovel).', null=True, on_delete=django.db.models.deletion.CASCADE, to='store_app.artist')),
                ('book_categories', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store_app.bookcategory')),
                ('book_language', models.ForeignKey(blank=True, help_text="The book(lightnovel)'s language", null=True, on_delete=django.db.models.deletion.CASCADE, to='store_app.booklanguage')),
                ('contributor', models.ForeignKey(blank=True, help_text='The contributor of the book(lightnovel).', null=True, on_delete=django.db.models.deletion.CASCADE, to='store_app.contributor')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books_creator', to=settings.AUTH_USER_MODEL)),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store_app.publisher')),
                ('stock_status_now', models.ForeignKey(help_text='The status of the stock.', on_delete=django.db.models.deletion.CASCADE, to='store_app.stockstatus')),
            ],
        ),
    ]
